rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is admin
    function isAdmin() {
      return request.auth != null && 
        (request.auth.token.email == 'admin@moai.com' || 
         request.auth.uid == 'admin' || 
         request.auth.token.email.matches('.*admin.*'));
    }
    // Users collection - users can read/write their own data
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Cooks collection - authenticated users can read all cooks, but only write their own profile, admins can do anything
    match /cooks/{cookId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && (request.auth.uid == cookId || isAdmin());
      allow delete: if request.auth != null && isAdmin();
    }
    
    // Dishes collection - authenticated users can read all dishes, cooks can write their own dishes, admins can do anything
    match /dishes/{dishId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && 
        (request.auth.uid == resource.data.cookerId || 
         request.auth.uid == request.resource.data.cookerId ||
         isAdmin());
      allow delete: if request.auth != null && 
        (request.auth.uid == resource.data.cookerId || isAdmin());
    }
    
    // Orders collection - users can read/write orders they're involved in (customer, cook, or driver)
    match /orders/{orderId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && 
        (request.auth.uid == resource.data.customerId || 
         request.auth.uid == resource.data.cookerId ||
         request.auth.uid == resource.data.driverId ||
         request.auth.uid == request.resource.data.customerId || 
         request.auth.uid == request.resource.data.cookerId ||
         request.auth.uid == request.resource.data.driverId ||
         isAdmin());
    }
    
    // Reviews collection - authenticated users can read all reviews, write their own
    match /reviews/{reviewId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && 
        (request.auth.uid == resource.data.customerId || 
         request.auth.uid == request.resource.data.customerId);
    }
    
    // Drivers collection - authenticated users can read all drivers, but only write their own profile, admins can do anything
    match /drivers/{driverId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && (request.auth.uid == driverId || isAdmin());
      allow delete: if request.auth != null && isAdmin();
    }
    
    // Allow authenticated users to read/write their own cart data
    match /carts/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Allow authenticated users to read/write their own favorites
    match /favorites/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
  }
}
