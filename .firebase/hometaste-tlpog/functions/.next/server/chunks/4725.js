"use strict";exports.id=4725,exports.ids=[4725],exports.modules={2826:(a,b,c)=>{c.d(b,{_:()=>d});class d{static{this.publicKey="APP_USR-b0e93ae7-6f6a-41ef-a107-384a3902e083"}static{this.initialized=!1}static initialize(){return this.publicKey?(this.initialized,!0):(console.error("Mercado Pago public key not found in environment variables"),!1)}static async createPreference(a){try{let b=await fetch("/api/mercadopago/create-preference",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(a)});if(!b.ok)throw Error("Failed to create payment preference");return await b.json()}catch(a){throw console.error("Error creating payment preference:",a),a}}static async processPayment(a){try{let b=await fetch("/api/mercadopago/process-payment",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(a)});if(!b.ok)throw Error("Payment processing failed");return await b.json()}catch(a){throw console.error("Error processing payment:",a),a}}static async getPaymentStatus(a){try{let b=await fetch(`/api/mercadopago/payment-status/${a}`);if(!b.ok)throw Error("Failed to get payment status");return await b.json()}catch(a){throw console.error("Error getting payment status:",a),a}}static getPaymentStatusText(a){switch(a){case"approved":return"Pago aprobado";case"pending":return"Pago pendiente";case"in_process":return"Pago en proceso";case"rejected":return"Pago rechazado";case"cancelled":return"Pago cancelado";case"refunded":return"Pago reembolsado";case"charged_back":return"Contracargo";default:return"Estado desconocido"}}static getPaymentStatusColor(a){switch(a){case"approved":return"text-green-600";case"pending":case"in_process":return"text-yellow-600";case"rejected":case"cancelled":return"text-red-600";case"refunded":case"charged_back":return"text-orange-600";default:return"text-gray-600"}}static formatCurrency(a){return new Intl.NumberFormat("es-CL",{style:"currency",currency:"CLP",minimumFractionDigits:0,maximumFractionDigits:0}).format(a)}static convertCurrency(a){return Math.round(a)}static async createPaymentReservation(a){try{let b=await fetch("/api/mercadopago/create-reservation",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(a)});if(!b.ok)throw Error("Failed to create payment reservation");return await b.json()}catch(a){throw console.error("Error creating payment reservation:",a),a}}static async capturePayment(a,b){try{let c=await fetch("/api/mercadopago/capture-payment",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({paymentId:a,amount:b})});if(!c.ok)throw Error("Failed to capture payment");return await c.json()}catch(a){throw console.error("Error capturing payment:",a),a}}static async cancelPaymentAuthorization(a){try{let b=await fetch("/api/mercadopago/cancel-authorization",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({paymentId:a})});if(!b.ok)throw Error("Failed to cancel payment authorization");return await b.json()}catch(a){throw console.error("Error canceling payment authorization:",a),a}}static async refundPayment(a,b){try{let c=await fetch("/api/mercadopago/refund-payment",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({paymentId:a,amount:b})});if(!c.ok)throw Error("Failed to process refund");return await c.json()}catch(a){throw console.error("Error processing refund:",a),a}}static async createPreferenceWithHold(a){try{let b=await fetch("/api/mercadopago/create-preference-hold",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(a)});if(!b.ok)throw Error("Failed to create payment preference with hold");return await b.json()}catch(a){throw console.error("Error creating payment preference with hold:",a),a}}}},4725:(a,b,c)=>{c.d(b,{n:()=>l});var d=c(75535),e=c(56525),f=c(87675),g=c(12323),h=c(68371);class i{static{this.messaging=null}static{this.vapidKey=process.env.NEXT_PUBLIC_FIREBASE_VAPID_KEY||"YOUR_VAPID_KEY"}static{this.isInitialized=!1}static{this.token=null}static async initialize(){}static async getToken(){if(!this.messaging)return null;try{let a=await (0,g.gf)(this.messaging,{vapidKey:this.vapidKey});if(a)return console.log("FCM Token:",a),this.token=a,await this.saveTokenToDatabase(a),a;return console.log("No registration token available"),null}catch(a){return console.error("Error getting FCM token:",a),null}}static async saveTokenToDatabase(a){try{let b=this.getCurrentUserId();if(!b)return;if(!(await fetch("/api/fcm/save-token",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({userId:b,token:a,platform:"web",lastUpdated:new Date().toISOString()})})).ok)throw Error("Failed to save FCM token");console.log("FCM token saved to database")}catch(a){console.error("Error saving FCM token:",a)}}static setupMessageHandlers(){this.messaging&&(0,g.xD)(this.messaging,a=>{if(console.log("Foreground message received:",a),a.notification){let{title:b,body:c}=a.notification,d=a.data||{};h.J.create({title:b||"Nueva notificaci\xf3n",message:c||"",type:this.getNotificationType(d.type),priority:d.priority||"medium",category:d.category||"system",metadata:d,action:d.actionUrl?{label:"Ver detalles",onClick:()=>window.location.href=d.actionUrl}:void 0})}})}static getNotificationType(a){return({order_accepted:"success",order_ready:"success",order_delivered:"success",order_cancelled:"error",payment_success:"success",payment_failed:"error",promotion:"info",system:"info"})[a]||"info"}static async subscribeToTopic(a){if(this.token||await this.getToken(),!this.token)return void console.error("No FCM token available");try{(await fetch("/api/fcm/subscribe",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({token:this.token,topic:a})})).ok&&console.log(`Subscribed to topic: ${a}`)}catch(a){console.error("Error subscribing to topic:",a)}}static async unsubscribeFromTopic(a){if(this.token)try{(await fetch("/api/fcm/unsubscribe",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({token:this.token,topic:a})})).ok&&console.log(`Unsubscribed from topic: ${a}`)}catch(a){console.error("Error unsubscribing from topic:",a)}}static async sendNotificationToUser(a,b){try{if(!(await fetch("/api/fcm/send",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({userId:a,notification:b})})).ok)throw Error("Failed to send notification");console.log("Notification sent successfully")}catch(a){console.error("Error sending notification:",a)}}static async sendOrderStatusNotification(a,b,c){let d={accepted:{title:"\xa1Pedido Aceptado! ‚úÖ",body:"Tu pedido ha sido aceptado y est\xe1 siendo preparado"},preparing:{title:"Preparando tu pedido \uD83D\uDC68‚Äç\uD83C\uDF73",body:"Tu deliciosa comida est\xe1 siendo preparada con amor"},ready:{title:"\xa1Pedido Listo! \uD83D\uDCE6",body:"Tu pedido est\xe1 listo para ser recogido"},delivering:{title:"En camino \uD83D\uDE9A",body:"Tu pedido est\xe1 en camino. \xa1Prep\xe1rate para disfrutar!"},delivered:{title:"\xa1Entregado! \uD83C\uDF89",body:"Tu pedido ha sido entregado. \xa1Que lo disfrutes!"},cancelled:{title:"Pedido Cancelado ‚ùå",body:"Tu pedido ha sido cancelado. Contacta soporte si necesitas ayuda"}}[c];d&&await this.sendNotificationToUser(a,{...d,data:{type:`order_${c}`,orderId:b,actionUrl:`/orders/${b}`,priority:"high",category:"order"}})}static async sendPromotionalNotification(a,b){try{(await fetch("/api/fcm/send-to-topic",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({topic:a,notification:{title:`üéâ ${b.title}`,body:`${b.description} - Usa el c\xf3digo ${b.code} para ${b.discount}% de descuento`,image:"/images/promotion-banner.jpg"},data:{type:"promotion",code:b.code,discount:b.discount.toString(),expiresAt:b.expiresAt,actionUrl:"/promotions",priority:"low",category:"promotion"}})})).ok&&console.log("Promotional notification sent")}catch(a){console.error("Error sending promotional notification:",a)}}static getCurrentUserId(){try{let a=window.__AUTH_CONTEXT__;if(a?.user?.uid)return a.user.uid;return JSON.parse(localStorage.getItem("user")||"{}").uid||null}catch(a){return console.warn("Error getting current user ID:",a),null}}static isSupported(){return this.isInitialized&&null!==this.token}static getCurrentToken(){return this.token}static async refreshToken(){return this.token=null,await this.getToken()}}var j=c(46672),k=c(2826);class l{static async approveOrder(a,b,c=30){try{let b=await f.OrdersService.getOrderById(a);if(!b)throw Error("Order not found");let g=(0,d.doc)(e.db,"orders",a);return await (0,d.mZ)(g,{status:"accepted","cookerApproval.approved":!0,"cookerApproval.approvedAt":(0,d.O5)(),estimatedPrepTime:c,estimatedDeliveryTime:new Date(Date.now()+6e4*c),updatedAt:(0,d.O5)()}),"card"===b.paymentMethod&&b.paymentId?(await this.releasePaymentHold(b.paymentId),await (0,d.mZ)(g,{paymentStatus:"paid"})):"cash_on_delivery"===b.paymentMethod&&await (0,d.mZ)(g,{paymentStatus:"cash_pending"}),await this.sendApprovalNotifications(b,c),console.log("Order approved successfully:",a),!0}catch(a){return console.error("Error approving order:",a),!1}}static async rejectOrder(a,b,c){try{let b=await f.OrdersService.getOrderById(a);if(!b)throw Error("Order not found");let g=(0,d.doc)(e.db,"orders",a);return await (0,d.mZ)(g,{status:"rejected","cookerApproval.approved":!1,"cookerApproval.rejectedAt":(0,d.O5)(),"cookerApproval.rejectionReason":c,updatedAt:(0,d.O5)()}),"card"===b.paymentMethod&&b.paymentId&&(await this.refundPayment(b.paymentId),await (0,d.mZ)(g,{paymentStatus:"failed"})),await this.sendRejectionNotifications(b,c),console.log("Order rejected successfully:",a),!0}catch(a){return console.error("Error rejecting order:",a),!1}}static async createOrderWithApproval(a){try{let b={...a,status:"pending_approval",paymentStatus:"card"===a.paymentMethod?"pending":"cash_pending",cookerApproval:{approved:!1},createdAt:(0,d.O5)(),updatedAt:(0,d.O5)()},c=await f.OrdersService.createOrder(b);return c&&(await this.notifyCookerForApproval(c,a.cookerId,a.customerName,a.total,a.paymentMethod),await j.ChatService.getOrCreateOrderChatRoom(c,a.cookerId,a.customerId)),c}catch(a){return console.error("Error creating order with approval:",a),null}}static async releasePaymentHold(a){try{console.log("Releasing payment hold for:",a);let b=await k._.capturePayment(a);if(b.success)console.log("Payment hold released successfully:",{paymentId:b.paymentId,status:b.status,capturedAmount:b.captured_amount});else throw Error("Failed to capture payment")}catch(a){console.error("Error releasing payment hold:",a)}}static async refundPayment(a){try{console.log("Processing refund for payment:",a);try{let b=await k._.cancelPaymentAuthorization(a);if(b.success)return void console.log("Payment authorization canceled successfully:",{paymentId:b.paymentId,status:b.status})}catch(a){console.log("Could not cancel authorization, attempting refund instead:",a)}let b=await k._.refundPayment(a);if(b.success)console.log("Payment refunded successfully:",{refundId:b.refundId,paymentId:b.paymentId,amount:b.amount});else throw Error("Failed to process refund")}catch(a){console.error("Error processing refund:",a)}}static async sendApprovalNotifications(a,b){try{let c=new Date(Date.now()+6e4*b),d=c.toLocaleTimeString("es-CL",{hour:"2-digit",minute:"2-digit"});await i.sendNotificationToUser(a.customerId,{title:"‚úÖ \xa1Orden Aprobada y Aceptada!",body:`Tu orden ha sido aprobada. Tiempo estimado: ${b} min. Entrega aprox: ${d}`,data:{orderId:a.id,type:"order_approved",actionUrl:`/orders/${a.id}/tracking`,priority:"high",estimatedDeliveryTime:c.toISOString()}});let e=await j.ChatService.getOrCreateOrderChatRoom(a.id,a.cookerId,a.customerId);e&&await j.ChatService.sendSystemMessage(e,`üéâ \xa1Orden aprobada! El cocinero comenzar\xe1 la preparaci\xf3n. Tiempo estimado: ${b} minutos. Entrega aproximada: ${d}`,{orderId:a.id,type:"order_approved",estimatedPrepTime:b,estimatedDeliveryTime:c.toISOString()}),await this.sendApprovalEmail(a,b)}catch(a){console.error("Error sending approval notifications:",a)}}static async sendRejectionNotifications(a,b){try{await i.sendNotificationToUser(a.customerId,{title:"‚ùå Orden Rechazada",body:`Lo sentimos, tu orden fue rechazada. Raz\xf3n: ${b}`,data:{orderId:a.id,type:"order_rejected",actionUrl:`/orders/${a.id}`,priority:"high"}});let c=await j.ChatService.getOrCreateOrderChatRoom(a.id,a.cookerId,a.customerId);c&&await j.ChatService.sendSystemMessage(c,`‚ùå Orden rechazada. Raz\xf3n: ${b}. ${"card"===a.paymentMethod?"Se procesar\xe1 el reembolso autom\xe1ticamente.":""}`,{orderId:a.id,type:"order_rejected",rejectionReason:b}),await this.sendRejectionEmail(a,b)}catch(a){console.error("Error sending rejection notifications:",a)}}static async notifyCookerForApproval(a,b,c,d,e){try{let f=new Intl.NumberFormat("es-CL",{style:"currency",currency:"CLP"}).format(d),g="card"===e?"Pago Digital":"Pago en Efectivo";await i.sendNotificationToUser(b,{title:"\uD83D\uDD14 Nueva Orden - Requiere Aprobaci\xf3n",body:`${c} - ${f} (${g}). \xbfAceptas la orden?`,data:{orderId:a,type:"order_approval_required",actionUrl:`/cooker/dashboard?tab=orders&orderId=${a}`,priority:"high",paymentMethod:e}})}catch(a){console.error("Error sending cooker approval notification:",a)}}static async sendApprovalEmail(a,b){try{console.log("Sending approval email to:",a.customerEmail||a.customerId)}catch(a){console.error("Error sending approval email:",a)}}static async sendRejectionEmail(a,b){try{console.log("Sending rejection email to:",a.customerEmail||a.customerId)}catch(a){console.error("Error sending rejection email:",a)}}}},68371:(a,b,c)=>{c.d(b,{J:()=>e});var d=c(52581);class e{static{this.notifications=[]}static{this.listeners=new Set}static{this.soundEnabled=!0}static{this.pushEnabled=!1}static initialize(){this.requestPermission(),this.setupServiceWorker(),this.loadPreferences()}static async requestPermission(){if("Notification"in window){let a=await Notification.requestPermission();this.pushEnabled="granted"===a}}static setupServiceWorker(){"serviceWorker"in navigator&&navigator.serviceWorker.register("/sw.js").then(a=>{console.log("Service Worker registered:",a)}).catch(a=>{console.error("Service Worker registration failed:",a)})}static loadPreferences(){let a=localStorage.getItem("notificationPreferences");if(a){let{soundEnabled:b}=JSON.parse(a);this.soundEnabled=b}}static create(a){let b={...a,id:this.generateId(),timestamp:new Date,read:!1};return this.notifications.unshift(b),this.notifyListeners(),this.showToast(b),this.playSound(b),this.showPushNotification(b),this.persistNotifications(),b.id}static notifyOrderReceived(a,b,c){return this.create({title:"\xa1Nuevo Pedido Recibido!",message:`${b} ha realizado un pedido por $${c.toLocaleString("es-CL")}`,type:"success",priority:"high",category:"order",action:{label:"Ver Pedido",onClick:()=>window.location.href=`/cooker/dashboard?order=${a}`},metadata:{orderId:a,customerName:b,total:c}})}static notifyOrderStatusChange(a,b,c){return this.create({title:"Estado del Pedido Actualizado",message:{accepted:"Tu pedido ha sido aceptado y est\xe1 siendo preparado",preparing:"Tu pedido est\xe1 siendo preparado",ready:"\xa1Tu pedido est\xe1 listo para recoger!",delivering:"Tu pedido est\xe1 en camino",delivered:"\xa1Tu pedido ha sido entregado!"}[b]||`Estado: ${b}`,type:"info",priority:"medium",category:"order",metadata:{orderId:a,status:b,role:c}})}static notifyPaymentSuccess(a,b){return this.create({title:"Pago Exitoso",message:`Tu pago de $${b.toLocaleString("es-CL")} ha sido procesado correctamente`,type:"success",priority:"high",category:"payment",metadata:{orderId:a,amount:b}})}static notifyPaymentFailed(a,b){return this.create({title:"Error en el Pago",message:`No se pudo procesar tu pago: ${b}`,type:"error",priority:"high",category:"payment",action:{label:"Reintentar",onClick:()=>window.location.href=`/payment/retry?order=${a}`},metadata:{orderId:a,reason:b}})}static notifyDriverAssigned(a,b){return this.create({title:"Repartidor Asignado",message:`${b} ha sido asignado a tu pedido`,type:"info",priority:"medium",category:"delivery",metadata:{orderId:a,driverName:b}})}static notifyDeliveryUpdate(a,b){return this.create({title:"Actualizaci\xf3n de Entrega",message:b,type:"info",priority:"medium",category:"delivery",metadata:{orderId:a}})}static notifyPromotion(a,b,c){return this.create({title:a,message:`${b} - ${c}% de descuento`,type:"info",priority:"low",category:"promotion",action:{label:"Ver Oferta",onClick:()=>window.location.href="/promotions"},metadata:{discount:c}})}static markAsRead(a){let b=this.notifications.find(b=>b.id===a);b&&(b.read=!0,this.notifyListeners(),this.persistNotifications())}static markAllAsRead(){this.notifications.forEach(a=>a.read=!0),this.notifyListeners(),this.persistNotifications()}static delete(a){this.notifications=this.notifications.filter(b=>b.id!==a),this.notifyListeners(),this.persistNotifications()}static clearAll(){this.notifications=[],this.notifyListeners(),this.persistNotifications()}static getUnreadCount(){return this.notifications.filter(a=>!a.read).length}static getNotifications(a){let b=this.notifications;return a?.category&&(b=b.filter(b=>b.category===a.category)),a?.read!==void 0&&(b=b.filter(b=>b.read===a.read)),a?.priority&&(b=b.filter(b=>b.priority===a.priority)),b}static subscribe(a){return this.listeners.add(a),()=>this.listeners.delete(a)}static notifyListeners(){this.listeners.forEach(a=>a([...this.notifications]))}static persistNotifications(){try{localStorage.setItem("notifications",JSON.stringify(this.notifications))}catch(a){console.error("Error persisting notifications:",a)}}static loadPersistedNotifications(){try{let a=localStorage.getItem("notifications");a&&(this.notifications=JSON.parse(a).map(a=>({...a,timestamp:new Date(a.timestamp)})),this.notifyListeners())}catch(a){console.error("Error loading persisted notifications:",a)}}static generateId(){return`notif_${Date.now()}_${Math.random().toString(36).substr(2,9)}`}static showToast(a){let b={duration:a.duration||("high"===a.priority?5e3:3e3),action:a.action?{label:a.action.label,onClick:a.action.onClick}:void 0};switch(a.type){case"success":d.oR.success(a.title,{description:a.message,...b});break;case"error":d.oR.error(a.title,{description:a.message,...b});break;case"warning":d.oR.warning(a.title,{description:a.message,...b});break;default:d.oR.info(a.title,{description:a.message,...b})}}static playSound(a){if(this.soundEnabled&&"low"!==a.priority)try{let a=new Audio("/sounds/notification.mp3");a.volume=.3,a.play().catch(a=>{console.warn("Could not play notification sound:",a)})}catch(a){console.warn("Error playing notification sound:",a)}}static showPushNotification(a){this.pushEnabled&&"low"!==a.priority&&"Notification"in window&&"granted"===Notification.permission&&new Notification(a.title,{body:a.message,icon:"/icon-192x192.png",badge:"/icon-96x96.png",tag:a.id,requireInteraction:"high"===a.priority})}static setSoundEnabled(a){this.soundEnabled=a,localStorage.setItem("notificationPreferences",JSON.stringify({soundEnabled:a}))}static isSoundEnabled(){return this.soundEnabled}static setPushEnabled(a){this.pushEnabled=a,a&&this.requestPermission()}static isPushEnabled(){return this.pushEnabled}static cleanup(){let a=new Date;a.setDate(a.getDate()-7),this.notifications=this.notifications.filter(b=>b.timestamp>a||"high"===b.priority),this.notifyListeners(),this.persistNotifications()}static getMetrics(){let a=this.notifications.length;return{total:a,unread:this.getUnreadCount(),byCategory:this.notifications.reduce((a,b)=>(a[b.category]=(a[b.category]||0)+1,a),{})}}}}};