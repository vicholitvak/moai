"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[9920],{79920:(e,t,r)=>{r.d(t,{EmailService:()=>o});class o{static async sendOrderNotificationToCook(e,t){try{var r;let o=await fetch("/api/email/send-order-notification",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({cookEmail:t.email,cookName:t.displayName||t.name,orderId:e.id,customerName:e.customerName,dishes:e.dishes,total:e.total,deliveryAddress:e.deliveryInfo.address,orderDate:(null==(r=e.createdAt)?void 0:r.toDate().toISOString())||new Date().toISOString()})});if(!o.ok)throw Error("HTTP error! status: ".concat(o.status));let a=await o.json();return console.log("Email sent successfully:",a),!0}catch(e){return console.error("Error sending order notification email:",e),!1}}static async sendOrderConfirmationToCustomer(e,t){try{return console.log("Order confirmation email would be sent to customer for order ".concat(e.id)),!0}catch(e){return console.error("Error sending customer confirmation email:",e),!1}}static async sendOrderStatusUpdate(e,t,r,o){try{return console.log("Status update email would be sent to ".concat(r," for order ").concat(e.id," - status: ").concat(t)),!0}catch(e){return console.error("Error sending status update email:",e),!1}}}}}]);